---
# tasks for "initial console configuration"
- name: Ensure PyMySQL or MySQL-python is installed
  package:
    name: '{{ pandorafms_console_mysql_python_package | default(mandatory) }}'
    state: present
  register: r
  until: r is success
  retries: 3

- name: Ensure Pandora FMS database exists
  mysql_db:
    name: '{{ pandorafms_console_dbname }}'
    login_user: '{{ pandorafms_console_db_privileged_user_name }}'
    login_password: '{{ pandorafms_console_db_privileged_user_password | default(omit) }}'
    login_host: '{{ pandorafms_console_dbhost }}'
    login_port: '{{ pandorafms_console_dbport }}'
  register: pandora_db_present
  notify: Ensure Pandora FMS db schema and initial data are imported

- name: flush handlers for Pandora FMS database setup
  meta: flush_handlers

- name: Ensure database user for Pandora FMS exists
  mysql_user:
    name: '{{ pandorafms_console_dbuser }}'
    password: '{{ pandorafms_console_dbpass }}'
    priv: '*.*:USAGE/{{ pandorafms_console_dbname }}.*:ALL'
    login_user: '{{ pandorafms_console_db_privileged_user_name }}'
    login_password: '{{ pandorafms_console_db_privileged_user_password | default(omit) }}'
    login_host: '{{ pandorafms_console_dbhost }}'
    login_port: '{{ pandorafms_console_dbport }}'

- name: Ensure libselinux-python package is installed
  package:
    name: libselinux-python
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version is version("6", "<=")
  register: r
  until: r is success
  retries: 3

- name: Create config.php from config.inc.php if absent
  copy:
    remote_src: yes
    src: '{{ pandorafms_console_docroot }}/include/config.inc.php'
    dest: '{{ pandorafms_console_docroot }}/include/config.php'
    force: no
    owner: '{{ pandorafms_console_www_user | default(mandatory) }}'
    group: '{{ pandorafms_console_www_group | default(mandatory) }}'
    mode: 0600

- name: Insert config to top of config.php
  blockinfile:
    path: '{{ pandorafms_console_docroot }}/include/config.php'
    insertbefore: '^<\?php'
    validate: 'php -l %s'
    owner: '{{ pandorafms_console_www_user | default(mandatory) }}'
    group: '{{ pandorafms_console_www_group | default(mandatory) }}'
    mode: 0600
    marker: '<?php /* {mark} ANSIBLE MANAGED BLOCK */ ?>'
    block: '{{ lookup("template", "config-block.php.j2") }}'

- name: Ensure install.php not exist
  file:
    path: '{{ pandorafms_console_docroot }}/install.php'
    state: absent
